{"hash":"c40a5ad6120a768bc2f27ca74ab5cb5f4e299046","fesm2022":[{"exports":["NgxCodeItComponent","NgxCodeItService"],"facadeModuleId":"D:\\travail\\test-lib-git\\dist\\ngx-code-it\\esm2022\\ngx-code-it.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["D:\\travail\\test-lib-git\\dist\\ngx-code-it\\esm2022\\lib\\ngx-code-it.service.mjs","D:\\travail\\test-lib-git\\dist\\ngx-code-it\\esm2022\\lib\\ngx-code-it.component.mjs","D:\\travail\\test-lib-git\\dist\\ngx-code-it\\esm2022\\public-api.mjs","D:\\travail\\test-lib-git\\dist\\ngx-code-it\\esm2022\\ngx-code-it.mjs"],"name":"ngx-code-it","type":"chunk","dynamicImports":[],"fileName":"ngx-code-it.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["*","Injectable","Component"],"@angular/common":["CommonModule"]},"imports":["@angular/core","@angular/common"],"modules":{"D:\\travail\\test-lib-git\\dist\\ngx-code-it\\esm2022\\lib\\ngx-code-it.service.mjs":{"code":"class NgxCodeItService {\n    constructor() { }\n    LogUpdater(params) {\n        console.log('LogUpdater', params);\n    }\n    LogEffect(params) {\n        console.log('LogEffect', params);\n    }\n    LogObservable(groupMessage, observable, initialState) {\n        console.log('LogObservable', groupMessage, observable, initialState);\n    }\n    LogState(params) {\n        console.log('LogState', params);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.4\", ngImport: i0, type: NgxCodeItService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.4\", ngImport: i0, type: NgxCodeItService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.4\", ngImport: i0, type: NgxCodeItService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: () => [] });","originalLength":3004,"removedExports":[],"renderedExports":["NgxCodeItService"],"renderedLength":1021},"D:\\travail\\test-lib-git\\dist\\ngx-code-it\\esm2022\\lib\\ngx-code-it.component.mjs":{"code":"class NgxCodeItComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.4\", ngImport: i0, type: NgxCodeItComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.4\", type: NgxCodeItComponent, isStandalone: true, selector: \"lib-ngx-code-it\", ngImport: i0, template: `\r\n    <p>\r\n      ngx-code-it works!\r\n    </p>\r\n  `, isInline: true, styles: [\"\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.4\", ngImport: i0, type: NgxCodeItComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-ngx-code-it', standalone: true, imports: [CommonModule], template: `\r\n    <p>\r\n      ngx-code-it works!\r\n    </p>\r\n  ` }]\n        }] });","originalLength":2102,"removedExports":[],"renderedExports":["NgxCodeItComponent"],"renderedLength":876},"D:\\travail\\test-lib-git\\dist\\ngx-code-it\\esm2022\\public-api.mjs":{"code":"/*\n * Public API Surface of ngx-code-it\n */","originalLength":674,"removedExports":[],"renderedExports":[],"renderedLength":43},"D:\\travail\\test-lib-git\\dist\\ngx-code-it\\esm2022\\ngx-code-it.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":500,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nclass NgxCodeItService {\n    constructor() { }\n    LogUpdater(params) {\n        console.log('LogUpdater', params);\n    }\n    LogEffect(params) {\n        console.log('LogEffect', params);\n    }\n    LogObservable(groupMessage, observable, initialState) {\n        console.log('LogObservable', groupMessage, observable, initialState);\n    }\n    LogState(params) {\n        console.log('LogState', params);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.4\", ngImport: i0, type: NgxCodeItService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.4\", ngImport: i0, type: NgxCodeItService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.4\", ngImport: i0, type: NgxCodeItService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: () => [] });\n\nclass NgxCodeItComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.4\", ngImport: i0, type: NgxCodeItComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.4\", type: NgxCodeItComponent, isStandalone: true, selector: \"lib-ngx-code-it\", ngImport: i0, template: `\r\n    <p>\r\n      ngx-code-it works!\r\n    </p>\r\n  `, isInline: true, styles: [\"\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.4\", ngImport: i0, type: NgxCodeItComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-ngx-code-it', standalone: true, imports: [CommonModule], template: `\r\n    <p>\r\n      ngx-code-it works!\r\n    </p>\r\n  ` }]\n        }] });\n\n/*\n * Public API Surface of ngx-code-it\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxCodeItComponent, NgxCodeItService };\n//# sourceMappingURL=ngx-code-it.mjs.map\n","map":null,"preliminaryFileName":"ngx-code-it.mjs","sourcemapFileName":"ngx-code-it.mjs.map"},{"fileName":"ngx-code-it.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"ngx-code-it.mjs\",\"sources\":[\"../../../projects/ngx-code-it/src/lib/ngx-code-it.service.ts\",\"../../../projects/ngx-code-it/src/lib/ngx-code-it.component.ts\",\"../../../projects/ngx-code-it/src/public-api.ts\",\"../../../projects/ngx-code-it/src/ngx-code-it.ts\"],\"sourcesContent\":[\"import { Injectable } from '@angular/core';\\r\\nimport { Observable, Subscription } from 'rxjs';\\r\\n\\r\\n@Injectable({\\r\\n  providedIn: 'root'\\r\\n})\\r\\nexport class NgxCodeItService {\\r\\n\\r\\n  constructor() { }\\r\\n  LogUpdater(params: any) {\\r\\n    console.log('LogUpdater', params);\\r\\n  }\\r\\n  \\r\\n  LogEffect(params: any) {\\r\\n    console.log('LogEffect', params);\\r\\n  }\\r\\n  \\r\\n  LogObservable(groupMessage: string, observable: Observable<any>, initialState: any) {\\r\\n    console.log('LogObservable', groupMessage, observable, initialState);\\r\\n  }\\r\\n  \\r\\n  LogState(params: any) {\\r\\n    console.log('LogState', params);\\r\\n  }\\r\\n}\\r\\n\",\"import { CommonModule } from '@angular/common';\\r\\nimport { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'lib-ngx-code-it',\\r\\n  standalone: true,\\r\\n  imports: [CommonModule],\\r\\n  template: `\\r\\n    <p>\\r\\n      ngx-code-it works!\\r\\n    </p>\\r\\n  `,\\r\\n  styles: ``\\r\\n})\\r\\nexport class NgxCodeItComponent {\\r\\n\\r\\n}\\r\\n\",\"/*\\r\\n * Public API Surface of ngx-code-it\\r\\n */\\r\\n\\r\\nexport * from './lib/ngx-code-it.service';\\r\\nexport * from './lib/ngx-code-it.component';\\r\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\";;;;MAMa,gBAAgB,CAAA;AAE3B,IAAA,WAAA,GAAA,GAAiB;AACjB,IAAA,UAAU,CAAC,MAAW,EAAA;AACpB,QAAA,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;KACnC;AAED,IAAA,SAAS,CAAC,MAAW,EAAA;AACnB,QAAA,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;KAClC;AAED,IAAA,aAAa,CAAC,YAAoB,EAAE,UAA2B,EAAE,YAAiB,EAAA;QAChF,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;KACtE;AAED,IAAA,QAAQ,CAAC,MAAW,EAAA;AAClB,QAAA,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;KACjC;8GAjBU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAFf,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAH5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCSY,kBAAkB,CAAA;8GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,EAPnB,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;AAIT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EALS,YAAY,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAQX,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAX9B,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,iBAAiB,cACf,IAAI,EAAA,OAAA,EACP,CAAC,YAAY,CAAC,EACb,QAAA,EAAA,CAAA;;;;AAIT,EAAA,CAAA,EAAA,CAAA;;;ACXH;;AAEG;;ACFH;;AAEG;;;;\"}","type":"asset"}]}